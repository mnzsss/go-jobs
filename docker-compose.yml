version: '3'

services:

  # App Service
  app:
    # Configuration for building the docker image for the service
    build:
      context: . # Use an image built from the specified dockerfile in the current directory.
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: unless-stopped
    depends_on: 
      postgres:
        condition: service_healthy 
    environment: # Pass environment variables to the service
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: gojobs
      DB_NAME: gojobs
      DB_PORT: 5432
    volumes:
      - ./:/app
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend

  # Redis Service   
  postgres:
    image: "postgres:alpine" # Use a public Postgres image to build the postgres service
    restart: unless-stopped
    environment: # Pass environment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: gojobs
      POSTGRES_DB: gojobs
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

networks:
  backend:    